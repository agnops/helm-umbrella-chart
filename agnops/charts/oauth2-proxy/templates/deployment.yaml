apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oauth2-proxy.fullname" . }}
  labels:
    {{- include "oauth2-proxy.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "oauth2-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "oauth2-proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oauth2-proxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          args:
          - --provider={{ .Values.global.scmProvider }}
          - --email-domain=*
          - --upstream=file:///dev/null
          - --http-address=0.0.0.0:4180
          - --client-id={{ .Values.clientId }}
          - --client-secret={{ .Values.clientSecret }}
          - --cookie-secret={{ .Values.cookieSecret }}
          # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 4180
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: 4180
          readinessProbe:
            httpGet:
              path: /ping
              port: 4180
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if and (and .Values.global.nodeSelector .Values.global.affinity) .Values.global.tolerations -}}
      nodeSelector:
      {{- with .Values.global.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- with .Values.global.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
      {{- with .Values.global.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      nodeSelector:
        {{- with .Values.nodeSelector }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      affinity:
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
      {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}